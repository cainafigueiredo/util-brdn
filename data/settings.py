modes = {
    'cora':  [
        'sameauthor(+author,+author).',
        'sameauthor(+author,-author).',
        'sameauthor(-author,+author).',
        'samebib(+class,+class).',
        'samebib(+class,-class).',
        'samebib(-class,+class).',
        'sametitle(+title,+title).',
        'sametitle(+title,-title).',
        'sametitle(-title,+title).',
        'samevenue(+venue,+venue).',
        'samevenue(+venue,-venue).',
        'samevenue(-venue,+venue).',
        #'recursion_samevenue(+venue,`venue).',
        #'recursion_samevenue(`venue,+venue).',
        'author(+class,+author).',
        'author(+class,-author).',
        'author(-class,+author).',
        'title(+class,+title).',
        'title(+class,-title).',
        'title(-class,+title).',
        'venue(+class,+venue).',
        'venue(+class,-venue).',
        'venue(-class,+venue).',
        'haswordauthor(+author,+word).',
        'haswordauthor(+author,-word).',
        'haswordauthor(-author,+word).',
        'haswordtitle(+title,+word).',
        'haswordtitle(+title,-word).',
        'haswordtitle(-title,+word).',
        'haswordvenue(+venue,+word).',
        'haswordvenue(+venue,-word).',
        'haswordvenue(-venue,+word).'
    ],

    'imdb': [
        'workedunder(+person,+person).',
        'workedunder(+person,-person).',
        'workedunder(-person,+person).',
        #'recursion_workedunder(+person,`person).',
        #'recursion_workedunder(`person,+person).',
        'female(+person).',
        'actor(+person).',
        'director(+person).',
        'movie(+movie,+person).',
        'movie(+movie,-person).',
        'movie(-movie,+person).',
        'genre(+person,+genre).'
    ],

    'nell_finances': [
        'countryhascompanyoffice(+country,+company).',
        'countryhascompanyoffice(+country,-company).',
        'countryhascompanyoffice(-country,+company).',
        'companyeconomicsector(+company,+sector).',
        'companyeconomicsector(+company,-sector).',
        'companyeconomicsector(-company,+sector).',
        'economicsectorcompany(+sector,`company).',
        'economicsectorcompany(`sector,+company).',
        #'recursion_economicsectorcompany(+sector,`company).',
        #'recursion_economicsectorcompany(`sector,+company).',
        #'economicsectorcompany(+sector,+company).',
        #'economicsectorcompany(+sector,-company).',
        #'economicsectorcompany(-sector,+company).',
        #'ceoeconomicsector(+person,+sector).',
        #'ceoeconomicsector(+person,-sector).',
        #'ceoeconomicsector(-person,+sector).',
        'companyceo(+company,+person).',
        'companyceo(+company,-person).',
        'companyceo(-company,+person).',
        'companyalsoknownas(+company,+company).',
        'companyalsoknownas(+company,-company).',
        'companyalsoknownas(-company,+company).',
        'cityhascompanyoffice(+city,+company).',
        'cityhascompanyoffice(+city,-company).',
        'cityhascompanyoffice(-city,+company).',
        'acquired(+company,+company).',
        'acquired(+company,-company).',
        'acquired(-company,+company).',
        #'ceoof(+person,+company).',
        #'ceoof(+person,-company).',
        #'ceoof(-person,+company).',
        'bankbankincountry(+person,+country).',
        'bankbankincountry(+person,-country).',
        'bankbankincountry(-person,+country).',
        'bankboughtbank(+company,+company).',
        'bankboughtbank(+company,-company).',
        'bankboughtbank(-company,+company).',
        'bankchiefexecutiveceo(+company,+person).',
        'bankchiefexecutiveceo(+company,-person).',
        'bankchiefexecutiveceo(-company,+person).'
    ],

    'nell_sports': [
        'athleteledsportsteam(+athlete,+sportsteam).',
        'athleteledsportsteam(+athlete,-sportsteam).',
        'athleteledsportsteam(-athlete,+sportsteam).',
        'athleteplaysforteam(+athlete,+sportsteam).',
        'athleteplaysforteam(+athlete,-sportsteam).',
        'athleteplaysforteam(-athlete,+sportsteam).',
        'athleteplaysinleague(+athlete,+sportsleague).',
        'athleteplaysinleague(+athlete,-sportsleague).',
        'athleteplaysinleague(-athlete,+sportsleague).',
        'athleteplayssport(+athlete,+sport).',
        'athleteplayssport(+athlete,-sport).',
        'athleteplayssport(-athlete,+sport).',
        'teamalsoknownas(+sportsteam,+sportsteam).',
        'teamalsoknownas(+sportsteam,-sportsteam).',
        'teamalsoknownas(-sportsteam,+sportsteam).',
        'teamplaysagainstteam(+sportsteam,+sportsteam).',
        'teamplaysagainstteam(+sportsteam,-sportsteam).',
        'teamplaysagainstteam(-sportsteam,+sportsteam).',
        'teamplaysinleague(+sportsteam,+sportsleague).',
        'teamplaysinleague(+sportsteam,-sportsleague).',
        'teamplaysinleague(-sportsteam,+sportsleague).',
        'teamplayssport(+sportsteam,+sport).',
        'teamplayssport(+sportsteam,-sport).',
        'teamplayssport(-sportsteam,+sport).',
        #'recursion_teamplayssport(`sportsteam,+sport).',
        #'recursion_teamplayssport(+sportsteam,`sport).',
        'teamplayssport(+sportsteam,`sport).',
        'teamplayssport(`sportsteam,+sport).'
    ],

    'twitter': [
        'accounttype(+account,+type).',
        'accounttype(+account,-type).',
        'accounttype(-account,+type).',
        #'typeaccount(+type,`account).',
        #'typeaccount(`type,+account).',
        'tweets(+account,+word).',
        'tweets(+account,-word).',
        'tweets(-account,+word).',
        'follows(+account,+account).',
        'follows(+account,-account).',
        #'recursion_accounttype(+account,`type).',
        #'recursion_accounttype(`account,+type).',
        'follows(-account,+account).'
    ],

    'uwcse': [
        'professor(+person).',
        'student(+person).',
        'advisedby(+person,+person).',
        'advisedby(+person,-person).',
        'advisedby(-person,+person).',
        #'recursion_advisedby(`person,+person).',
        #'recursion_advisedby(+person,`person).',
        'tempadvisedby(+person,+person).',
        'tempadvisedby(+person,-person).',
        'tempadvisedby(-person,+person).',
        'ta(+course,+person,+quarter).',
        'ta(-course,-person,+quarter).',
        'ta(+course,-person,-quarter).',
        'ta(-course,+person,-quarter).',
        'hasposition(+person,+faculty).',
        'hasposition(+person,-faculty).',
        'hasposition(-person,+faculty).',
        'publication(+title,+person).',
        'publication(+title,-person).',
        'publication(-title,+person).',
        'inphase(+person,+prequals).',
        'inphase(+person,-prequals).',
        'inphase(-person,+prequals).',
        'courselevel(+course,+level).',
        'courselevel(+course,-level).',
        'courselevel(-course,+level).',
        'yearsinprogram(+person,+year).',
        'yearsinprogram(-person,+year).',
        'yearsinprogram(+person,-year).',
        'projectmember(+project,+person).',
        'projectmember(+project,-person).',
        'projectmember(-project,+person).',
        'sameproject(+project,+project).',
        'sameproject(+project,-project).',
        'sameproject(-project,+project).',
        'samecourse(+course,+course).',
        'samecourse(+course,-course).',
        'samecourse(-course,+course).',
        'sameperson(+person,+person).',
        'sameperson(+person,-person).',
        'sameperson(-person,+person).'
    ],

    'yeast': [
        'location(+protein,+loc).',
        'location(+protein,-loc).',
        'location(-protein,+loc).',
        'interaction(+protein,+protein).',
        'interaction(+protein,-protein).',
        'interaction(-protein,+protein).',
        'proteinclass(+protein,+class).',
        'proteinclass(+protein,-class).',
        'proteinclass(-protein,+class).',
        #'classprotein(+class,`protein).',
        #'classprotein(`class,+protein).',
        'enzyme(+protein,+enz).',
        'enzyme(+protein,-enz).',
        'enzyme(-protein,+enz).',
        'function(+protein,+fun).',
        'function(+protein,-fun).',
        'function(-protein,+fun).',
        'complex(+protein,+com).',
        'complex(+protein,-com).',
        'complex(-protein,+com).',
        'phenotype(+protein,+phe).',
        #'recursion_proteinclass(+protein,`class).',
        #'recursion_proteinclass(`protein,+class).',
        'phenotype(+protein,-phe).',
        'phenotype(-protein,+phe).'
    ],
}

target = {
    'cora': 'samevenue',
    'imdb': 'workedunder',
    'nell_finances': 'companyeconomicsector',
    'nell_sports': 'teamplayssport',
    'twitter': 'accounttype',
    'uwcse': 'advisedby',
    'yeast': 'proteinclass',
}

nFolds = {
    'cora': None, # None indicates that we will use the original folds
    'imdb': None,
    'nell_finances': 3,
    'nell_sports': 3,
    'twitter': None,
    'uwcse': None,
    'yeast': None
}

negPosRatio = 2

seed = 441773

defaultNFolds = 3